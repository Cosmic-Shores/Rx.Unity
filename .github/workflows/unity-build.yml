name: Unity-Build

on:
  push:
    branches:
      - "master"
    tags:
      - "!*" # not a tag push
  pull_request:
    branches:
      - "master"

jobs:
  build-unity:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneLinux64
        scriptBackend:
          - Mono2x
          - IL2CPP
    steps:
      - uses: docker/setup-buildx-action@v1
        name: Set up Docker Buildx
        id: buildx
        with:
          buildx-version: latest
          qemu-version: latest
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Generate foundation for tests
        run: docker buildx build --output . ./Dependencies
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}-${{ matrix.scriptBackend }}
          restore-keys:
            Library-${{ matrix.targetPlatform }}-
            Library-
      # /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath . -executeMethod UnitTestBuilder.BuildUnitTest /headless /ScriptBackend Mono2x /BuildTarget StandaloneLinux64
      - name: Build UnitTest(${{ matrix.targetPlatform }}, ${{ matrix.scriptBackend }})
        uses: game-ci/unity-builder@v2.0-alpha-6
        env:
          UNITY_LICENSE: ${{secrets.UNITY_LICENSE}}
        with:
          projectPath: ./
          unityVersion: 2021.2.0f1
          targetPlatform: ${{ matrix.targetPlatform }}
          buildMethod: UnitTestBuilder.BuildUnitTest
          customParameters: /headless /ScriptBackend ${{ matrix.scriptBackend }}
          versioning: None
      - name: Execute UnitTest
        run: ./bin/UnitTest/${{ matrix.targetPlatform }}_${{ matrix.scriptBackend }}/test
